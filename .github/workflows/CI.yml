name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download DevTools
        run: wget https://github.com/pmmp/DevTools/releases/download/1.14.0/DevTools.phar -O ~/DevTools.phar
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer validate
        run: composer validate
      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-progress --no-suggest
      - name: Build source code
        run: php -dphar.readonly=0 ~/DevTools.phar --make ./ --out ./outiserverpmmpplugin.phar
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: PHAR
          path: ./outiserverpmmpplugin.phar
      - name: Zip output
        run: zip ./cl.zip ./outiserverpmmpplugin.phar
      - name: commit message
        run: echo github.event.head_commit
      - name: file send to discord
        uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          content: "CIチェックが終了しました\n簡易ビルドは正常に完了しました\n差分: ${{ github.event.compare}}"
          filename: ./cl.zip
          username: ${{ github.event.sender.login }}
          avatar-url: ${{ github.event.sender.avatar_url }}


